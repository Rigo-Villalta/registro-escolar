# Generated by Django 3.1.1 on 2020-09-30 02:47

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('escuela', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Departamento',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=25)),
            ],
        ),
        migrations.CreateModel(
            name='Estudiante',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=40)),
                ('apellidos', models.CharField(max_length=40)),
                ('sexo', models.CharField(choices=[('M', 'Masculino'), ('F', 'Femenino')], default='F', max_length=1)),
                ('fecha_de_nacimiento', models.DateField()),
                ('nie', models.CharField(max_length=12)),
                ('posee_partida', models.BooleanField(help_text='Si el estudiante no posee partida de nacimiento se debe demostrar un trámite áctivo para obtenerla.', verbose_name='Posee partida de nacimiento')),
                ('nacionalidad', models.CharField(choices=[('S', 'Salvadoreña'), ('H', 'Hondureña'), ('G', 'Guatemalteca'), ('N', 'Nicaragüense'), ('C', 'Costaricence'), ('P', 'Panameña'), ('E', 'Estadounidense'), ('O', 'Otros')], max_length=1)),
                ('etnia', models.CharField(choices=[('N', 'Ninguna'), ('K', 'Kakawira'), ('L', 'Lenca'), ('N', 'Nahuat - Pipil')], max_length=1)),
                ('es_autista', models.BooleanField(verbose_name='Transtorno del espectro autista')),
                ('sordera', models.BooleanField()),
                ('ceguera', models.BooleanField()),
                ('baja_vision', models.BooleanField(verbose_name='Baja visión')),
                ('down', models.BooleanField(verbose_name='Síndrome down')),
                ('discpacidad_motora', models.BooleanField()),
                ('discapacidad_intelectual', models.BooleanField()),
                ('embarazo', models.BooleanField()),
                ('estado_civil', models.CharField(choices=[('S', 'Soltero'), ('C', 'Casado'), ('D', 'Divorciado'), ('U', 'Unión libre'), ('O', 'Otro')], default='S', max_length=1)),
                ('roommate', models.CharField(choices=[('M', 'Madre'), ('D', 'Padre'), ('P', 'Padre y madre'), ('F', 'Otro familiar'), ('S', 'Solo'), ('O', 'Otros')], max_length=1, verbose_name='Personas con que vive el estudiante')),
                ('trabaja', models.BooleanField(verbose_name='¿El Estudiante trabaja?')),
                ('dependencia_economica', models.CharField(choices=[('M', 'Madre'), ('D', 'Padre'), ('P', 'Padre y madre'), ('F', 'Otro familiar'), ('S', 'Solo'), ('O', 'Otros')], max_length=1)),
                ('zona_de_residencia', models.CharField(choices=[('U', 'Urbana'), ('R', 'Rural')], default='U', max_length=1)),
                ('utiliza_vehiculo', models.BooleanField()),
                ('utiliza_transporte_publico', models.BooleanField()),
                ('camina_a_la_escuela', models.BooleanField()),
                ('otro_medio_de_transporte', models.BooleanField()),
                ('distancia', models.PositiveSmallIntegerField(help_text='Ingrese la distancia en KM de la vivienda del estudiante al centro educativo', verbose_name='Distancia de vivienda')),
                ('posee_refrigerador', models.BooleanField()),
                ('posee_televisor', models.BooleanField()),
                ('posee_celular_con_acceso_a_internet', models.BooleanField()),
                ('posee_radio', models.BooleanField(verbose_name='Posee radio o equipo de sonido')),
                ('posee_computadora', models.BooleanField()),
                ('posee_tables', models.BooleanField()),
                ('posee_energia', models.BooleanField(verbose_name='Posee energía eléctrica')),
                ('fuente_de_agua', models.CharField(choices=[('A', 'Servicio de agua potable en casa'), ('P', 'Pila, chorro público o cantarera'), ('Z', 'Pozo'), ('I', 'Pipa'), ('R', 'Río, Laguna o nacimiento'), ('L', 'Aguas lluvias'), ('O', 'Otros')], default='A', max_length=1)),
                ('piso', models.CharField(choices=[('L', 'Ladrillo de cemento'), ('C', 'Cerámica'), ('M', 'Cemento'), ('T', 'Tierra'), ('O', 'Otro')], default='L', help_text='Material principal del piso de la casa del estudiante', max_length=1)),
                ('tipo_de_sanitario', models.CharField(choices=[('T', 'Tasa conectada a alcantarillado'), ('F', 'Fosa séptica'), ('O', 'Otro')], default='T', max_length=1)),
                ('internet_residencial', models.BooleanField()),
                ('compania_internet', models.CharField(choices=[('T', 'Tigo'), ('C', 'Claro'), ('J', 'Japi'), ('O', 'Otro')], help_text='Si posee internet indique la compañia.', max_length=1)),
                ('cantidad_cohabitantes', models.PositiveSmallIntegerField()),
                ('menores_en_casa', models.BooleanField(verbose_name='Viven menores de 18 años con el estudiante')),
                ('escuela_previa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='escuela.escuela')),
                ('hermanos', models.ManyToManyField(related_name='_estudiante_hermanos_+', to='personas.Estudiante')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Responsable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=40)),
                ('apellidos', models.CharField(max_length=40)),
                ('sexo', models.CharField(choices=[('M', 'Masculino'), ('F', 'Femenino')], default='F', max_length=1)),
                ('fecha_de_nacimiento', models.DateField()),
                ('dui', models.CharField(max_length=12, verbose_name='DUI')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Telefono',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero', models.CharField(max_length=15)),
                ('persona', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='personas.responsable')),
            ],
        ),
        migrations.CreateModel(
            name='Municipio',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=40)),
                ('departamento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='personas.departamento')),
            ],
        ),
        migrations.CreateModel(
            name='Familia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('relacion', models.CharField(choices=[('P', 'Padre'), ('M', 'Madre'), ('T', 'Tío/Tía'), ('A', 'Abuelo/Abuela'), ('H', 'Hermano/Hermana'), ('O', 'Otros')], default='M', max_length=1, verbose_name='Relación')),
                ('estudiante', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='personas.estudiante')),
                ('responsable', models.ForeignKey(help_text='Selecciones un responable para el estudiante', on_delete=django.db.models.deletion.CASCADE, to='personas.responsable')),
            ],
        ),
        migrations.AddField(
            model_name='estudiante',
            name='municipio',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='personas.municipio', verbose_name='Municipio de nacimiento'),
        ),
        migrations.AddField(
            model_name='estudiante',
            name='nivel_a_matricular',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='escuela.niveleducativo'),
        ),
        migrations.AddField(
            model_name='estudiante',
            name='responsable',
            field=models.ManyToManyField(through='personas.Familia', to='personas.Responsable'),
        ),
        migrations.AddField(
            model_name='estudiante',
            name='seccion',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='escuela.seccion'),
        ),
        migrations.AddField(
            model_name='estudiante',
            name='seccion_previa',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='seccion_previa', to='escuela.seccion', verbose_name='Sección previa'),
        ),
    ]
